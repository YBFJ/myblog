(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{599:function(e,t,a){"use strict";a.r(t);var r=a(3),v=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("最近在回顾以前跟着别人写的一些实战项目，这是其中的一个看的 vue2.5 入门，教的很好的入门课程。")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.imooc.com/learn/980",target:"_blank",rel:"noopener noreferrer"}},[e._v("慕课 vue2.5 写 todolist 课程网址"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YBFJ/vue2.5-todo-list.git",target:"_blank",rel:"noopener noreferrer"}},[e._v("我跟着写的代码 GitHub 地址"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("这里面虽然只是也是一些 vue 基础，但是还是让我受益匪浅，其中让我尤其深刻有以下一些东西")]),e._v(" "),a("h4",{attrs:{id:"_1-computed-可以用于计算属性-某个属性由其他属性计算而来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-computed-可以用于计算属性-某个属性由其他属性计算而来"}},[e._v("#")]),e._v(" 1. computed: 可以用于计算属性，某个属性由其他属性计算而来")]),e._v(" "),a("h4",{attrs:{id:"_2-watch-侦听器-某个计算属性或者侦听器发生了变化-就可以在侦听器里面写一些逻辑也就是-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-watch-侦听器-某个计算属性或者侦听器发生了变化-就可以在侦听器里面写一些逻辑也就是-function"}},[e._v("#")]),e._v(" 2. watch: 侦听器，某个计算属性或者侦听器发生了变化，就可以在侦听器里面写一些逻辑也就是 function")]),e._v(" "),a("h4",{attrs:{id:"_3-局部组件-var-和全局组件-vue-component-的注册-和在-vue-实例中的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-局部组件-var-和全局组件-vue-component-的注册-和在-vue-实例中的使用"}},[e._v("#")]),e._v(" 3. 局部组件(var)和全局组件(vue.component)的注册，和在 vue 实例中的使用")]),e._v(" "),a("blockquote",[a("p",[e._v("在此处我想引用一下课程老师说的一句话，每个 Vue 组件无论是全局组件还是局部组件都是一个 vue 的实例，组件的编写方法其实和实例非常类似，所以实例的结构也可以用在组件里面，比如 methods，接受 \b 外部组件的传值什么的")])]),e._v(" "),a("h4",{attrs:{id:"_4-父子组件的通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-父子组件的通讯"}},[e._v("#")]),e._v(" 4. 父子组件的通讯")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("父组件向子组件传值是通过标签的属性值进行传值，子组件的 props 数组可以接受外部父组件传进去了的属性，但是必须要在子组件中注册")])]),e._v(" "),a("li",[a("p",[e._v("子组件向父组件传值是通过定义一个方法，然后向父组件 emit(发射)一个事件，传递某个数值。然后父组件在监视这个事件，一旦检测到子组件发射出来的事件，就触发写在父组件的函数，已达到改变子组件的数据的目的")])])]),e._v(" "),a("h4",{attrs:{id:"_5-组件、实例、模板的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-组件、实例、模板的关系"}},[e._v("#")]),e._v(" 5. 组件、实例、模板的关系")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("每个组件都是一个 vue 实例，全局组件使用 vue.component 注册后可以直接使用，局部组件用 var 定义之后需要到实例中通过 components: 注册之后才能在挂载点下面去使用")])]),e._v(" "),a("li",[a("p",[e._v("实例没有模板就去找挂载点，也就是 el: 对应的挂载点，会把挂载点下面的所有 dom 标签作为模板。一个挂载点作为一个 div 包含所有的 dom 标签")])])]),e._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结：")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("vue 改变了前端的编程方式，以前是面对 DOM 编程，现在是面向数据编程，改变数据就可以直接改变页面的显示方式")])]),e._v(" "),a("li",[a("p",[e._v("vue 能够实时监测数据改变，这一点很棒，但是我感觉吧写 vue 的时候最好关闭 Eslint 语法监测，会把人整疯的。找到 build 文件夹---\x3ewebpack.base.conf.js----\x3emodule，把 module 的 rules 数组的 eslint-loader 这个组给注释掉就好了")])]),e._v(" "),a("li",[a("p",[e._v("感觉 vue 玩起来就像是搭积木，\b 非常有意思，接下来想认真学习一下 vue 是路由还有 vuex，全家桶系列。使用 vue 的目标就是：能够用 vue+express+node.js+MongoDB 做成全栈！！！！加油！！！！")])])])])}),[],!1,null,null,null);t.default=v.exports}}]);