(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{354:function(e,s,o){"use strict";o.r(s);var t=o(0),a=Object(t.a)({},(function(){var e=this,s=e.$createElement,o=e._self._c||s;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h3",{attrs:{id:"问题-登录-cookie-是怎么实现的？"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#问题-登录-cookie-是怎么实现的？"}},[e._v("#")]),e._v(" 问题:登录 cookie 是怎么实现的？")]),e._v(" "),o("h2",{attrs:{id:"解答"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#解答"}},[e._v("#")]),e._v(" 解答")]),e._v(" "),o("p",[e._v("参考"),o("a",{attrs:{href:"%22https://blog.csdn.net/zhoujie_zhoujie/article/details/56844764%22"}},[e._v("浏览器缓存机制(三)——cookie")])]),e._v(" "),o("h3",{attrs:{id:"设置-cookie"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#设置-cookie"}},[e._v("#")]),e._v(" 设置 cookie")]),e._v(" "),o("p",[e._v("在浏览器端创建 cookie：\n用户可以在浏览器端 document.cookie(注意，这个方法只能获取非 HttpOnly 类型的 cookie）创建 cookie 会获取 cookie，在下一次访问该站点时，cookie 的名值对就会随 HTTP 请求发送至服务器。用户也可在浏览器端获得 cookie.")]),e._v(" "),o("p",[e._v("在服务器端创建 cookie:\n通过服务器对 HTTP 请求设置 Set-Cookie 字段，服务器可以将需要客户端保存的会话信息放在该字段内，客户端就会存储在这样的会话信息，并在以后的请求中通过 HTTP 头将信息发回服务器。")]),e._v(" "),o("h4",{attrs:{id:"在项目我自己的-react-后台中使用了-browser-cookies-一个管理-cookies-的插件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#在项目我自己的-react-后台中使用了-browser-cookies-一个管理-cookies-的插件"}},[e._v("#")]),e._v(" 在项目我自己的 react 后台中使用了 browser-cookies 一个管理 cookies 的插件")]),e._v(" "),o("p",[o("a",{attrs:{href:"%22https://www.cnblogs.com/wenbodeboke/p/10018842.html%22"}},[e._v("browser-cookies 使用参考")])]),e._v(" "),o("div",{staticClass:"language-JS extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" browserCookie "),o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v("'browser-cookies'")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),o("p",[e._v("用于在退出的时候清空 cookies")]),e._v(" "),o("p",[e._v("cookies.erase(''); 全部清空")]),e._v(" "),o("p",[e._v("cookies.erase('firstName'); 清空这一个")]),e._v(" "),o("h3",{attrs:{id:"在我自己的-react-后台中使用了-cookie-parser-中间件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#在我自己的-react-后台中使用了-cookie-parser-中间件"}},[e._v("#")]),e._v(" 在我自己的 react 后台中使用了 cookie-parser 中间件")]),e._v(" "),o("p",[e._v("这个 cookie-parser 的开启，在 server.js 里面就已经开启了，所以其余的路由都可以用。")]),e._v(" "),o("p",[o("a",{attrs:{href:"%22https://blog.csdn.net/sooooooooad/article/details/52154228%22"}},[e._v("cookie-parser 参考")])]),e._v(" "),o("p",[e._v("其实就是解析 http 传入的 cookie\ncookieParser()实际上是对 http 传入的 cookie 进行解析后赋值给 req.cookies，使得中间件可用，如果你传入了一个 string 类的参数那么说明你需要对用这个参数进行了加密的值进行解密。")]),e._v(" "),o("p",[e._v("express 直接提供了 api,只需要在需要使用的地方调用如下 api 即可。")]),e._v(" "),o("p",[o("a",{attrs:{href:"%22https://blog.csdn.net/xiaohubeiplus/article/details/51198208%22"}},[e._v("express 中 cookie 的使用和 cookie-parser 的解读")])]),e._v(" "),o("div",{staticClass:"language-JS extra-class"},[o("pre",{pre:!0,attrs:{class:"language-js"}},[o("code",[e._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("const")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" userid "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" req"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("cookies"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);